import groovy.json.*

buildscript {
    ext {
        kotlin_version = '1.3.40'
        kotlin_logging_version = "1.6.22"
        coroutines_version = "0.23.3"
        rules_version = "3.2.4"
    }
    dependencies {
        // classpath 'io.github.microutils:kotlin-logging:1.6.22'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//
        classpath "org.jeasy:easy-rules-core:$rules_version"
        classpath "org.jeasy:easy-rules-core-js:$rules_version"
        classpath "org.jeasy:easy-rules-core-common:$rules_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"
        classpath "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.11.1"
        classpath "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.11.1"

    }

    repositories {
        jcenter()
        mavenCentral()
        google()
        mavenLocal()
        maven {
            url 'http://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven { url 'http://dl.bintray.com/kotlin/kotlinx.html' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-js-wrappers' }
        maven { url 'http://dl.bintray.com/kotlin/kotlinx' }

    }

}

plugins {
    id 'java' //need for the "from"
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.40'
    id 'java-library'
    id("maven-publish")
    // id "kotlin-platform-js"
    //id 'org.jetbrains.kotlin.frontend'
    id 'kotlin-multiplatform' version '1.3.40'

}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

kotlin {
    targets {
        println(presets.getAsMap().keySet())
        fromPreset(presets.jvm, 'jvm') {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                    jvmTarget = '1.8'
                }
            }
        }
        fromPreset(presets.js, 'nodeJs') {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                }
            }
        }
    }
    sourceSets {
        commonMain {
            kotlin.srcDir('src/main/kotlin')
            resources.srcDir('src/main/resource')
            dependencies {
                implementation "io.github.microutils:kotlin-logging-common:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation 'io.mockk:mockk:1.9'
                implementation "org.jeasy:easy-rules-core-common:$rules_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.11.1"


            }
        }

        /*commonTest {
            kotlin.srcDir('src/test/kotlin')
            dependencies {
                implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation 'io.mockk:mockk:1.9'
                implementation 'io.mockk:mockk-common:1.9'
            //    implementation(project(":easy-rules-core"))
            }
        }*/


        jvmTest {//TODO : commonTest instead of jvmtest, wwhen mockk.js will be better at it
            kotlin.srcDir('src/test/kotlin')
            dependencies {

                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
                implementation 'io.mockk:mockk-common:1.9'

            }
        }
        jvm {
            dependencies {
                implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"
                implementation "org.jeasy:easy-rules-core-jvm:$rules_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"

            }
        }
        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-js:$kotlin_logging_version"
                implementation "org.jeasy:easy-rules-core-js:$rules_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.11.1"
                //implementation "org.jetbrains.kotlin:kotlin-test-js"
                //  implementation 'io.mockk:mockk:1.7.17'
            }

        }

        nodeJsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-js:$kotlin_logging_version"
                implementation "org.jeasy:easy-rules-core-js:$rules_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.11.1"
                //implementation "org.jetbrains.kotlin:kotlin-test-js"
                //  implementation 'io.mockk:mockk:1.7.17'
            }

        }


        jsTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-js:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-test-js"
                //  implementation 'io.mockk:mockk:1.7.17'
            }
        }
        metadata {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-common:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jeasy:easy-rules-core-common:$rules_version"
                //  implementation 'io.mockk:mockk:1.7.17'
            }
        }
    }

    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "1.8"
        }
        mavenPublication {
            artifactId project.name + "-jvm"
        }
    }
    js() {
        nodejs {}
        // browser{}
        mavenPublication {
            artifactId project.name + "-js"
        }
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            moduleKind = "umd"
        }
    }
    metadata {
        mavenPublication {
            artifactId project.name + "-common"
        }

    }

}


task listrepos {
    doLast {
        println "Repositories:"
        project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
    }
}
